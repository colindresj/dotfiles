# ---------------------
# Colors
# ---------------------
# Adds colors to LS
export CLICOLOR=1
# http://geoff.greer.fm/lscolors/
export LSCOLORS=bxexcxdxbxegedabagacad
# prompt colors
BLACK="\e[0;30m"        # Black
RED="\e[1;31m"          # Red
ORANGE="\e[0;31m"       # Orange
GREEN="\e[1;32m"        # Green
YELLOW="\e[0;33m"       # Yellow
BLUE="\e[0;34m"         # Blue
PURPLE="\e[1;35m"       # Purple
CYAN="\e[0;36m"         # Cyan
WHITE="\e[0;37m"        # White

BOLD=""
RESET="\033[m"

# -----------------
# Git status in the prompt
# -----------------
# Long git to show + ? !
is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}

is_git_dir() {
  $(git rev-parse --is-inside-git-dir 2> /dev/null)
}

get_git_branch() {
  local branch_name
  # Get the short symbolic ref
  branch_name=$(git symbolic-ref --quiet --short HEAD 2> /dev/null) ||
  # If HEAD isn't a symbolic ref, get the short SHA
  branch_name=$(git rev-parse --short HEAD 2> /dev/null) ||
  # Otherwise, just give up
  branch_name="(unknown)"
  printf $branch_name
}

get_git_contributor() {
  local initials=$(git config user.initials)
  local name=$(git config user.name)

  if [[ -z $name ]]; then
    echo $initials
  else
    echo $name
  fi
}

# ---------------------
# Git status information
# ---------------------
prompt_git() {
  local git_info git_state git_contributor uc us ut st

  if ! is_git_repo || is_git_dir; then
      return 1
  fi

  git_info=$(get_git_branch)
  # Check for uncommitted changes in the index
  if ! $(git diff --quiet --ignore-submodules --cached); then
      uc="+"
  fi

  # Check for unstaged changes
  if ! $(git diff-files --quiet --ignore-submodules --); then
      us="!"
  fi

  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
      ut="${RED}?"
  fi

  # Check for stashed files
  if $(git rev-parse --verify refs/stash &>/dev/null); then
      st="$"
  fi

  git_state=$uc$us$ut$st
  # Combine the branch name and state information
  if [[ $git_state ]]; then
      git_info="$git_info${RESET}[$git_state${RESET}]"
  fi

  git_contributor=$(get_git_contributor)

  printf "${WHITE} on ${style_branch}${git_info}${WHITE} as ${YELLOW}${git_contributor}"
}


# ---------------------
# Build and style the prompt for git
# ---------------------
style_user="\[${RESET}${WHITE}\]"
style_path="\[${RESET}${CYAN}\]"
style_chars="\[${RESET}${WHITE}\]"
style_branch="${RED}"

PS1="${style_user}\u"                    # Username
PS1+="${style_path} \w"                  # Working directory
PS1+="\$(prompt_git)"                    # Git details
PS1+="\n"                                # Newline
PS1+="${style_chars}\$ \[${RESET}\]"     # $ (and reset color)
